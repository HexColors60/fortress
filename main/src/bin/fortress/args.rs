use structopt::StructOpt;

///
/// The structure of the commands.
///
/// A large amount of this is generated by StructOpt.
/// See that project for how to write large amounts of this.
///
/// The gist however is that we make a struct that will hold
/// all of our arguments. Commands are then parsed, and then
/// turned into this struct.
///
#[derive(StructOpt, Debug)]
#[structopt(name = "Fortress", about = "A Dwarf Fortress Clone.")]
pub struct Args {
    /// The map file we will be using.
    #[structopt(short = "m", long = "map", help = "The map file to load.")]
    pub map: String,
}

impl Args {
    ///
    /// Builds a new args from the main arguments given.
    ///
    pub fn new_from_args() -> Args {
        return Args::from_args();
    }
}
